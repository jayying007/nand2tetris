function Math.init 0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 0
neg
return
function Math.multiply 3
push constant 1
pop local 1
label WHILE_EXP0
push local 2
push constant 16
lt
not
if-goto WHILE_END0
push argument 0
push local 1
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
add
pop local 0
label IF_FALSE0
push argument 1
push argument 1
add
pop argument 1
push local 1
push local 1
add
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Math.divide 1
push argument 0
call Math.abs 1
push argument 1
call Math.abs 1
call Math.div 2
pop local 0
push argument 0
push argument 1
and
push constant 0
lt
push argument 0
push argument 1
or
push constant 0
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
goto IF_END0
label IF_FALSE0
push local 0
neg
return
label IF_END0
function Math.div 1
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
or
push argument 0
push argument 1
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 1
push constant 2
call Math.multiply 2
call Math.divide 2
pop local 0
push argument 0
push constant 2
push local 0
call Math.multiply 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
push local 0
call Math.multiply 2
return
label IF_FALSE1
push constant 2
push local 0
call Math.multiply 2
push constant 1
add
return
function Math.sqrt 2
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 1
push local 1
call Math.multiply 2
pop local 0
push local 0
push constant 0
lt
push local 0
push argument 0
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
sub
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Math.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
function Math.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
